{
  "name": "Pi-hole",
  "version": "4.1.2",
  "slug": "pi-hole",
  "description": "Network-wide ad blocking",
  "url": "https://github.com/casperklein/hassio-addons/tree/master/pi-hole",
  "image": "casperklein/hassio-pi-hole",
  "arch": ["aarch64", "amd64", "armhf", "armv7"],
  "webui": "[PROTO:ssl]://[HOST]:[PORT:4865]",
  "ingress": true,
  "ingress_port": 61478,
  "panel_icon": "mdi:pi-hole",
  "startup": "system",
  "ports": {
    "53/udp": 53,
    "80/tcp": null,
    "4865/tcp": 4865
  },
  "ports_description": {
    "53/udp": "DNS server port",
    "80/tcp": "Web interface (Not required for Ingress)",
    "4865/tcp": "API endpoint (For HA integration)"
  },
  "boot": "auto",
  "host_network": true,
  "hassio_api": true,
  "hassio_role": "default",
  "auth_api": true,
  "privileged": ["NET_ADMIN"],
  "map": ["config", "ssl"],
  "options": {
    "update_lists_on_start": false,
    "ssl": true,
    "certfile": "fullchain.pem",
    "keyfile": "privkey.pem",
    "interface": "",
    "ipv6": true,
    "ipv4_address": "",
    "ipv6_address": "",
    "hosts": []
  },
  "schema": {
    "log_level": "list(trace|debug|info|notice|warning|error|fatal)?",
    "update_lists_on_start": "bool",
    "ssl": "bool",
    "certfile": "str",
    "keyfile": "str",
    "interface": "str",
    "ipv6": "bool",
    "ipv4_address": "str",
    "ipv6_address": "str",

    "hosts": [
      {
        "name": "str",
        "ip": "match(((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$)))"
      }
    ],
    "leave_front_door_open": "bool?"
  }
}
